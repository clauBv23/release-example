name: Release
on:
  push:
    branches:
      - release-*
  workflow_dispatch:
    inputs:
      package:
        type: choice
        description: Which package to release
        options: 
          - "contracts"
          - "configs"

concurrency: ${{ github.workflow }}-${{ github.ref }}
permissions: {} #reset

jobs:
  
  start:
    runs-on: ubuntu-latest
    name: Start Release Candidate
    ## Run this job only if Manually triggered by the user on UI of main branch.
    if: ${{ github.ref_name == 'main' && github.event_name == 'workflow_dispatch' }}
    permissions:
      contents: write
      actions: write
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 20
      - run: yarn install
      - run: bash scripts/git-user-config.sh
      - name: Create Release Candidate Branch
        id: start
        run: bash scripts/start.sh
        env:
          PACKAGE: ${{ github.event.inputs.package }}
      - name: Re-run workflow
        uses: actions/github-script@v7
        with:
          script: |
            const [owner, repo] = '${{ github.repository }}'.split('/');
            github.rest.actions.createWorkflowDispatch({
              owner: owner,
              repo: repo,
              workflow_id: 'release-cycle.yml',
              ref: '${{ steps.start.outputs.branch }}',
            });
  
  changesets:
    runs-on: ubuntu-latest
    name: Update PR to release
    ## This will also run when we decide to do promote which we do by manually dispatching workflow from UI on release-v branch
    if: ${{contains(github.ref_name, 'release-')}}
    permissions:
      contents: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 20
      - run: yarn install
      - run: bash scripts/git-user-config.sh
      - name: Exit pre-release
        ## If user manually triggered the workflow from `release-*` branch, this means he/she is ready to 
        ## publish the non-prerelease(main) version, so we exit the pre-release.
        if:  ${{ github.event_name == 'workflow_dispatch' &&  github.triggering_actor != 'github-actions[bot]' }}
        run: bash scripts/release/workflow/exit-prerelease.sh
      - name: Fetch latest changes
        run: |
          git fetch origin
          git reset --hard origin/${{ github.ref_name }}
      - name: Create/Update PR
        id: changesets
        uses: changesets/action@v1
        with:
          version: yarn ignore
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REF_NAME: ${{ github.ref_name }}
          EVENT_NAME: ${{ github.event_name }}
          TRIGGERING_ACTOR: ${{ github.triggering_actor }}
    
    # publish:
    #   - name: Create temporary .npmrc
    #     if: ${{contains(github.ref_name, 'changeset-release')}}
    #     run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > .npmrc
    #   - name: Publish to npm
    #     uses: actions/github-script@v7
    #     if: ${{contains(github.ref_name, 'changeset-release')}}
    #     env:
    #       NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
    #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #     with:
    #       script: await require('./scripts/publish.js')({ github, context })
